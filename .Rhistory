install.packages("knitr")
install.packages("markdown")
globalenv()
R.version()
R.Version()
R.Version.string
R.version.string
R.version
devtools::install_github("rstudio/rmarkdown")
devtools::install_github("rstudio/rmarkdown")
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
?qbeta
qbeta(0.75,2,1)
pbeta(0.975,2,1)
pbeta(0.75,2,1)
pbeta(0.975,2,1)
qbeta(0.975,2,1)
?punif
qunif(0.5)
nosim <- 1000
n <- 10
sd(apply(matrix(rnorm(nosim * n), nosim), 1, mean))
sd(apply(matrix(rnorm(nosim * n), nosim), 1, mean))
sd(apply(matrix(rnorm(nosim * n), nosim), 1, mean))
sd(apply(matrix(rnorm(nosim * n), nosim), 1, mean))
sd(apply(matrix(runif(nosim * n), nosim), 1, mean))
sd(apply(matrix(rpois(nosim * n), nosim), 1, mean))
sd(apply(matrix(rpois(nosim * n, 4), nosim), 1, mean))
sd(apply(matrix(rpois(nosim * n, 4), nosim), 1, mean))
sd(apply(matrix(rpois(nosim * n, 4), nosim), 1, mean))
sd(apply(matrix(rpois(nosim * n, 4), nosim), 1, mean))
sd(apply(matrix(rpois(nosim * n, 4), nosim), 1, mean))
sd(apply(matrix(sample(0 :1, nosim * n, replace = TRUE), nosim), 1, mean))
1/(2*sqrt(n))
rnorm(nosim * n)
matrix(rnorm(nosim * n), nosim)
size(matrix(rnorm(nosim * n), nosim))
dim(matrix(rnorm(nosim * n), nosim))
?apply
sd?
?sd
sd(apply(matrix(rnorm(nosim * n), nosim), 1, mean))
1/sqrt(n)
?matrix
sd(apply(matrix(rnorm(100000 * n), nosim), 1, mean))
sd(apply(matrix(rnorm(100000 * n), 100000), 1, mean))
plot(apply(matrix(rnorm(100000 * n), 100000), 1, mean))
rm(list = ls())
library(UsingR)
data(father.son)
x <- father.son$sheight
n <- length(x)
g <- ggplot(data = father.son, aes(x = sheight))
g
g <- g + geom_histogram(aes(y = ..density..), fill = "lightblue", binwidth=1, colour = "black")
g
g <- g + geom_density(size = 2, colour = "black")
g
p <- c(.1, .2, .3, .4)
x <- 2 : 5
x*p
sum(x*p)
sum(x^2*p) - sum(x*p)^2
rm(list = ls())
n = 10
sim = 1000
?variance
?var
?sample
sample(1:6, 10, replace = TRUE)
var(apply(matrix(sample(1:6, sim * n), sim), 1, mean))
var(apply(matrix(sample(1:6, sim * n, replace = TRUE), sim), 1, mean))
sim = 100000
var(apply(matrix(sample(1:6, sim * n, replace = TRUE), sim), 1, mean))
var(apply(matrix(sample(1:6, sim * n, replace = TRUE), sim), 1, mean))
mean((1:6-3.5)^2/10)
mean((1:6-3.5)^2)
?pbinom
pbinom(6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(8, size = 10, prob = 0.5, lower.tail = FALSE)
choose(10,9)
choose(10,9)*.5^10 + choose(10,10)*.5^10
?pnorm
pnorm(5, mean = 11, sd = 2)
pnorm(-3)
?ppois
ppois(40, lambda = 9 * 5)
?round
round(pnorm(92, mean = 100, sd = 10)*100)
round(pnorm(93, mean = 100, sd = 10)*100)
?qnorm
qnorm(95, mean = 100, sd = 10)
qnorm(.95, mean = 100, sd = 10)
qnorm(.95, mean = 100, sd = 10, lower.tail = FALSE)
qnorm(.05, mean = 100, sd = 10, lower.tail = FALSE)
qnorm(.05, mean = 100, sd = 10/sqrt(50), lower.tail = FALSE)
choose(6,5)*0.5^6+choose(6,6)*0.5^6
?pbinom
pbinom(4, size = 6, prob = 0.5)
pbinom(4, size = 6, prob = 0.5, lower.tail=FALSE)
?ppois
ppois(20, lamda = 16.5 * 2)
ppois(20, lambda = 16.5 * 2)
rm(list = ls())
n <- 1000
means <- cumsum(rnorm(n))/(1:n)
plot(means)
means <- cumsum(sample(0:1, n, replace = TRUE))/(1:n)
plot(means)
n <- 10000
means <- cumsum(rnorm(n))/(1:n)
library(ggplot2)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(sample(0:1, n, replace = TRUE))/(1:n)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
?binom.test
pnorm(-1)
?poisson.test
poisson.test(10)
poisson.test(10)$conf
poisson.test(10, T=1)$conf
(51-50)/sqrt(100/12)
pnorm(0.4364102)
rm(list = ls())
?pnorm
pnorm(93,mean=100,sd=10)
?var
E_X = 3.5
E_X2 = 15.17
E_X2 - E_X^2
E_X2 = 1^2*1/6 + 2^2*1/6+3^2*1/6+4^2*1/6+5^2*1/6+6^2*1/6
E_X2
E_X2 - E_X^2
swirl()
library(swirl)
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr * PDF)
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr * dice_high) - 3.5^2
sum(dice_high * dice_sqr) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/(sqrt(10))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
?pbinom
pbinom(2, 5, .8, lower.tail = FALSE)
pbinom(2, 5, .8, lower.tail = FALSE)
qnorm(0.1)
0
q(0.975, mean = 3, sd = 2)
qnorm(0.975, mean = 3, sd - 2)
?qnorm
qnorm(0.975, mean = 3, sd = 2)
X = 3 + 2*1.96
pnorm(1200, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE)
qnorm(0.75, mean = 1020, sd = 50, lower.tail = TRUE)
.53
.53
ppois(3,mean=(2.4*4))
ppois(3,2.5*4)
p(5,0.1*1000)
ppois(5,0.1*1000)
pbinom(5,1000,.01)
ppois(5,0.01*1000)
ppois(5,1000*.01)
coinplot(10)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 + c(-1,1) * qnorm(.975)*sqrt(0.6*0.4/100)
x$conf.it
binom.test(60, 100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/t)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/5)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)$conf.int
poisson.test(5, 94.32)$conf
rm(list=ls())
pnorm(70,mean=80,sd=10)
?qnorm
qnorm(.95,mean=1100,sd=75)
qnorm(.95,mean=1100,sd=sqrt(75/100))
qnorm(.95,mean=1100,sd=75/10))
qnorm(.95,mean=1100,sd=75/10)
?pbinom
pbinom(3,5,0.5,lower.tail=FALSE)
$norm.test
pnorm(14,mean=15,sd=10/10)
pnorm(16,mean=15,sd=10/10,lower.tail=FALSE)
1-2*pnorm(16,mean=15,sd=10/10,lower.tail=FALSE)
?pbinom
pbinom(10,3,5)
pbinom(10,3,5*3)
pbinom(10,lambda=5*3)
ppois(10,3,5)
ppois(10,3,5*3)
ppois(10,lambda=5*3)
setwd("C:/Users/Ekellan/git/StatisticalInference")
nosim <- 1000; n <- 40; lambda = 0.2;
dvar <- data.frame(
x = c(apply(matrix(rexp(nosim * n, lambda), nosim), 1, var)),
)
ggplot(dvar, aes(x = x)) +
geom_density(size = 2, alpha = .2) +
geom_vline(xintercept = 1/(lambda^2), size = 1, linetype = 3)
nosim <- 1000; n <- 40; lambda = 0.2;
dvar <- data.frame(
x = c(apply(matrix(rexp(nosim * n, lambda), nosim), 1, var))
)
ggplot(dvar, aes(x = x)) +
geom_density(size = 2, alpha = .2) +
geom_vline(xintercept = 1/(lambda^2), size = 1, linetype = 3)
library(ggplot2)
nosim <- 1000; n <- 40; lambda = 0.2;
dvar <- data.frame(
x = c(apply(matrix(rexp(nosim * n, lambda), nosim), 1, var))
)
ggplot(dvar, aes(x = x)) +
geom_density(size = 2, alpha = .2) +
geom_vline(xintercept = 1/(lambda^2), size = 1, linetype = 3)
?geom_histogram
library(ggplot2)
nosim <- 1000; n <- 40; lambda = 0.2;
cfunc <- function(x, n) sqrt(n) * (mean(x) - 1/lambda) / sqrt(1/lambda^2)
dat <- data.frame(
x = apply(matrix(rexp(nosim * n, lambda),
nosim), 1, cfunc, n)
)
head(x)
head(dat)
mean(dat)
str(dat)
mean(dat$x)
var(dat$x)
?round
rm(list = ls())
data(ToothGrowth)
str(ToothGrowth)
summarty(ToothGrowth)
summary(ToothGrowth)
?ToothGrowth
ToothGrowth
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
boxplot(len ~ dose, data = ToothGrowth)
boxplot(len ~ dose | supp, data = ToothGrowth)
library(ggplot2)
ggplot(ToothGrown, aes(x=dose, y=dose)) + geom_boxplot()
ggplot(ToothGrowth, aes(x=dose, y=dose)) + geom_boxplot()
ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot()
ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot() + facet_grid(supp ~ .)
ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot() + facet_grid(. ~ supp)
aggregate(len,list(dose,supp),FUN=function(x) c(x_mean = mean(x), x_sd = sd(x)))
attach(ToothGrowth)
aggregate(len,list(dose,supp),FUN=function(x) c(x_mean = mean(x), x_sd = sd(x)))
aggregate(len,list(dose,supp),FUN=function(x) c(x_mean = mean(x), x_sd = sd(x)), x_ci_95 = qnorm(0.975))
aggregate(len,list(dose,supp),FUN=function(x) c(x_mean = mean(x), x_sd = sd(x)), n = len(x))
len(ToothGrowth$len)
count(ToothGrowth$len)
length(ToothGrowth$len)
aggregate(len,list(dose,supp),FUN=function(x) c(x_mean = mean(x), x_sd = sd(x)), n = length(x))
aggregate(len,list(dose,supp),FUN=function(x) c(x_mean = mean(x), x_sd = sd(x), n = length(x)))
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
?qt
dsum <- aggregate(len,list(dose,supp),FUN=function(x) c(x_mean = mean(x)
, x_sd = sd(x)
, n = length(x)))
names(dsum)
dsum
dsum <- aggregate(len,list(dose,supp),FUN=function(x) c(X_bar = mean(x)
, S = sd(x)
, n = length(x)))
names(dsum) <- ("dose","supp","x")
?names
names(dsum) <- c("dose","supp","x")
dsum
?t.test
ToothGrowth
ToothGrowth
head(ToothGrowth)
ToothGrowth(dose = 0.5)
ToothGrowth[dose = 0.5]
d_0.5 < subset(ToothGrowth, dose = 0.5, select = c("len","supp"))
d_0.5 <- subset(ToothGrowth, dose = 0.5, select = c("len","supp"))
d_0.5
d_0.5 <- subset(ToothGrowth, dose = 0.5)
d_0.5
d_0.5 <- subset(ToothGrowth, dose == 0.5, select = c("len","supp"))
t.test(len ~ supp, paired = TRUE, data = ToothGrowth)
max <- ToothGrowth[dose == 1.5]
d_max <- ToothGrowth$len[dose == 1.5]
unique(ToothGrowth$len)
unique(ToothGrowth$dose)
d_max <- ToothGrowth$len[dose == 2]
d_min <- ToothGrowht$len[dose == 0.5]
d_min <- ToothGrowth$len[dose == 0.5]
d_05 <- ToothGrowht$len[dose == 0.5]
d_05 <- ToothGrowth$len[dose == 0.5]
d_10 <- ToothGrowth$len[dose == 19]
d_05 <- ToothGrowth$len[dose == 2]
d_10 <- ToothGrowth$len[dose == 1]
d_05 <- ToothGrowth$len[dose == 0.5]
d_10 <- ToothGrowth$len[dose == 1]
d_20 <- ToothGrowth$len[dose == 2]
t_05v10 <- t.test(d_05, d_10, paired = TRUE)
t_05v20 <- t.test(d_05, d_20, paired = TRUE)
t_10v20 <- t.test(d_10, d_20, paired = TRUE)
t_05v10
t_05v10
t_05v10$data
t_05v10
t_05v10[:]
t_05v10[1:2]
out <- data.frame("t.value" = sprintf("%.3f", t_05v10$statistic)
,  "df"= t_05v10$parameter
,  "p.value" = sprintf("%.3f", t_05v10$p.value)
)
out
t_05v10
out <- data.frame(
"t.value" = sprintf("%.3f", t_05v10$statistic),
"CI-low" = sprintf("%.3f", t_05v10$conf[1]),
"CI-high" = sprintf("%.3f", t_05v10$conf[2]),
"p.value" = sprintf("%.3f", t_05v10$p.value,)
)
out <- data.frame(
"t.value" = sprintf("%.3f", t_05v10$statistic),
"CI-low" = sprintf("%.3f", t_05v10$conf[1]),
"CI-high" = sprintf("%.3f", t_05v10$conf[2]),
"p.value" = sprintf("%.3f", t_05v10$p.value)
)
out
d_05 <- ToothGrowth$len[dose == 0.5]
d_10 <- ToothGrowth$len[dose == 1]
d_20 <- ToothGrowth$len[dose == 2]
t_05v10 <- t.test(d_05, d_10, paired = TRUE)
t_05v20 <- t.test(d_05, d_20, paired = TRUE)
t_10v20 <- t.test(d_10, d_20, paired = TRUE)
t1 <- data.frame(
"t.value" = sprintf("%.3f", t_05v10$statistic),
"CI-low" = sprintf("%.3f", t_05v10$conf[1]),
"CI-high" = sprintf("%.3f", t_05v10$conf[2]),
"p.value" = sprintf("%.3f", t_05v10$p.value)
)
t2 <- data.frame(
"t.value" = sprintf("%.3f", t_05v20$statistic),
"CI-low" = sprintf("%.3f", t_05v20$conf[1]),
"CI-high" = sprintf("%.3f", t_05v20$conf[2]),
"p.value" = sprintf("%.3f", t_05v20$p.value)
)
t3 <- data.frame(
"t.value" = sprintf("%.3f", t_10v20$statistic),
"CI-low" = sprintf("%.3f", t_10v20$conf[1]),
"CI-high" = sprintf("%.3f", t_10v20$conf[2]),
"p.value" = sprintf("%.3f", t_10v20$p.value)
)
result <- rbind(t1, t2, t3)
result
?t.test
?qt
library(datasets)
data(mtcars)
Ét.test
?t.test
str(mtcars)
t.test(mtcars$mpg)
t.test(mtcars$mpg)$conf.int
qt(.975,8)*1/3
head(mtcars)
t.test(mpg ~ cyl, paired = FALSE, var.equal = FALSE, data = mtcars[cyl == 4 or cyl == 6])
t.test(mpg ~ cyl, paired = FALSE, var.equal = FALSE, data = mtcars[cyl == 4 | cyl == 6])
t.test(mpg ~ cyl, paired = FALSE, var.equal = FALSE, data = mtcars[mtcars$cyl == 4 | mtcars$cyl == 6])
attach(mtcars)
t.test(mpg ~ cyl, paired = FALSE, var.equal = FALSE, data = mtcars[cyl == 4 | cyl == 6])
mtcars[cyl == 4 | cyl == 6]
mtcars[cyl == 4]
names(mtcars)
mtcars["cyl" == 4]
mtcars["cyl" == 4 | "cyl" == 6]
mtcars[cyl == 4]
mtcars[cyl == 4]$mpg
mtcars[cyl == '4']$mpg
mtcars[mtcars$cyl == '4']$mpg
mtcars[mtcars$cyl == 4]
mtcars[mtcars$cyl == 4,]
mtcars[cyl == 4 | cyl == 6,]
t.test(mpg ~ cyl, paired = FALSE, var.equal = FALSE, data = mtcars[cyl == 4 | cyl == 6,])
t.test(mpg ~ cyl, paired = FALSE, var.equal = FALSE, data = mtcars[cyl == 4 | cyl == 6,])$conf.int
t.test(mpg ~ cyl, paired = FALSE, var.equal = TRUE, data = mtcars[cyl == 4 | cyl == 6,])$conf.int
sqrt((1.5^2+1.8^2)/2)
(1.5^2+1.8^2)/2
mtcars
head(mtcars)
mean(mpg)
x_bar <- mean(mpg)
t.test(mpg)
t.test(mpg)$conf.int[1]
t.test(mpg, alternative = "less")$conf.int[1]
t.test(mpg, alternative = "greater")$conf.int[1]
mn <- mean(mpg)
s <- sd(mpg)
z <- qnorm(0.05)
mu0 <- mn - z * s / sqrt(nrow(mtcars))
mu0
t.test(mpg ~ cyl, paired = FALSE, var.equal = FALSE, data = mtcars[cyl == 4 | cyl == 6,])$conf.int
t.test(mpg ~ cyl, paired = FALSE, var.equal = FALSE, data = mtcars[cyl == 4 | cyl == 6,])
?pbinom
t.test(-1, paired = FALSE, var.equal = TRUE)
?t.test
?ppois
ppois(15800,520*30,lower.tail=FALSE)
ppois(15799,520*30,lower.tail=FALSE)
1100 + c(-1,1) + qnorm(.975,8)*30/sqrt(9)
1100 + c(-1,1) * qnorm(.975,8)*30/sqrt(9)
1100 + c(-1,1) * qt(.975,8)*30/sqrt(9)
(2*3)/qt(.975,8)
w1 <- 5
w2 <- 3
sd1 <- .68
sd2 <- .6
md <- 5 - 3
n1 <- 10
n2 <- 10
sp <- sqrt (((n1-1)*sd1^2 + (n2-1)*sd2^2) / (n1+n2-2) )
semd <- sp * sqrt(1/n1 + 1/n2)
md + c(-1,1) * qt(.975, n1 + n2 - 2) * semd
sp <- sqrt ( ( (n1-1)*sd1^2 + (n2-1)*sd2^2 ) / (n1+n2-2) )
md <- w2 - w1
md
md + c(-1,1) * qt(.975, n1 + n2 - 2) * semd
md + c(-1,1) * qt(.975, n1 + n2) * semd
md + c(-1,1) * qt(.975, n1 + n2 - 4) * semd
md + c(-1,1) * qt(.975, n1 + n2 - 2) * semd
md
s <- sd2 - sd1
md + c(-1,1) * qt(.975, 9 ) * s / sqrt(10)
md <- w2 - w1
md + c(-1,1) * qt(.975, 19 ) * s / sqrt(20)
mn <- 3 - 5
s <- .6 - .68
n <- 10
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
mn
n
s
2/150
(4-6)/-1.5/sqrt(100)
(1.5+1.8)/2
sqrt((1.5^2+1.8^2)/2)
-4 + c(-1,1)*pt(.95,16)*1.656804*sqrt(2/9)
-4 + c(-1,1)*pt(.95,16)*1.656804*sqrt(1/9)
-4 + c(-1,1)*pt(.95,16)*1.656804*sqrt(2/9)
-4 + c(-1,1)*pt(.9,16)*1.656804*sqrt(2/9)
-4 + c(-1,1)*pt(.95,8)*1.656804*sqrt(2/9)
-4 + c(-1,1)*pt(.9,16)*1.656804*sqrt(2/9)
s = sqrt((9*1.5^2+9.1.8^2)/16)
s <- sqrt((9*1.5^2+9.1.8^2)/16)
sqrt((9*1.5^2+9.1.8^2)/16)
sqrt((9*1.5^2+9*1.8^2)/16)
s <- sqrt((9*1.5^2+9*1.8^2)/16)
-4 + c(-1,1)*pt(.9,16)*s*sqrt(2/9)
-4 + c(-1,1)*pt(.95,16)*s*sqrt(2/9)
-4 + c(-1,1)*qt(.95,16)*s*sqrt(2/9)
-4 + c(-1,1)*qt(.9,16)*1.656804*sqrt(2/9)
-4 + c(-1,1)*qt(.9,16)*1.656804*sqrt(1/9)
-4 + c(-1,1)*qt(.95,16)*s*sqrt(2/9)
n1 <- 9
n2 <- 9
sd1 <- 1.5
sd2 <- 1.8
sp <- sqrt( ((n1 - 1) * sd1^2 + (n2-1) * sd2^2) / (n1 + n2-2))
sp
md <- -3-1
md
semd <- sp * sqrt(1 / n1 + 1/n2)
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
md + c(-1, 1) * qt(.95, n1 + n2 - 2) * semd
mn <- -2
sp <- sqrt((0.6+0.68)/2)
sp
sp^2
n1 <- 10
n2 <- 10
semd <- sp * sqrt(1 / n1 + 1/n2)
mn + c(-1, 1) * qt(.95, n1 + n2 - 2) * semd
mn
mn + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
